CC=tcc
COPTS=-w -c -I. -ml -v

pcomm.exe: dosstart.obj pcomm.obj stdio.obj string.obj stdlib.obj \
       start.obj time.obj errno.obj assert.obj signal.obj locale.obj \
       ctype.obj setjmp.obj math.obj fpfuncsb.obj
  tlink -v dosstart+pcomm+stdio+string+stdlib+start+time+errno\
        +assert+signal+locale+ctype+setjmp+math+fpfuncsb,\
        pcomm.exe,nul.map,,
#  if exist borland.lib del borland.lib
#  tlib borland +dpsstart.obj +stdio.obj +string.obj +stdlib.obj \
#       +start.obj +time.obj +errno.obj +assert.obj +signal.obj +locale.obj \
#       +ctype.obj +setjmp.obj +math.obj +fpfuncsb.obj
  
dosstart.obj: dosstart.asm
  tasm -mx -w2 -zi dosstart.asm

start.obj: start.c
  $(CC) $(COPTS) start.c
  
pcomm.obj: pcomm.c
  $(CC) $(COPTS) pcomm.c
  
stdio.obj: stdio.c
  $(CC) $(COPTS) stdio.c
  
string.obj: string.c
  $(CC) $(COPTS) string.c
  
stdlib.obj: stdlib.c
  $(CC) $(COPTS) stdlib.c
  
time.obj: time.c
  $(CC) $(COPTS) time.c
  
errno.obj: errno.c
  $(CC) $(COPTS) errno.c
  
assert.obj: assert.c
  $(CC) $(COPTS) assert.c
  
signal.obj: signal.c
  $(CC) $(COPTS) signal.c
  
locale.obj: locale.c
  $(CC) $(COPTS) locale.c
  
ctype.obj: ctype.c
  $(CC) $(COPTS) ctype.c
  
setjmp.obj: setjmp.c
  $(CC) $(COPTS) setjmp.c
  
math.obj: math.c
  $(CC) $(COPTS) math.c
  
fpfuncsb.obj: fpfuncsb.c
  $(CC) $(COPTS) fpfuncsb.c
  


